{
  "openapi": "3.0.0",
  "info": {
    "version": "0.0.1",
    "title": "CashFlow Casino API",
    "description": "API for CashFlow Casino platform including user management, VIP system, and wallet operations"
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "accessTokenExpiresAt": {
            "type": "string",
            "nullable": true
          },
          "refreshTokenExpiresAt": {
            "type": "string",
            "nullable": true
          },
          "currentGameSessionDataId": {
            "type": "string",
            "nullable": true
          },
          "currentAuthSessionDataId": {
            "type": "string",
            "nullable": true
          },
          "avatarUrl": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "phpId": {
            "type": "integer"
          },
          "isActive": {
            "type": "boolean"
          },
          "lastLoginAt": {
            "type": "string",
            "nullable": true
          },
          "totalXpGained": {
            "type": "integer"
          },
          "vipInfoId": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "deletedAt": {
            "type": "string",
            "nullable": true
          },
          "lastSeen": {
            "type": "string",
            "nullable": true
          },
          "rtgBlockTime": {
            "type": "integer"
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "invitorId": {
            "type": "string",
            "nullable": true
          },
          "avatar": {
            "type": "string"
          },
          "count_balance": {
            "type": "integer"
          },
          "count_tournaments": {
            "type": "integer"
          },
          "count_happyhours": {
            "type": "integer"
          },
          "count_refunds": {
            "type": "integer"
          },
          "count_progress": {
            "type": "integer"
          },
          "count_daily_entries": {
            "type": "integer"
          },
          "count_invite": {
            "type": "integer"
          },
          "count_welcomebonus": {
            "type": "integer"
          },
          "count_smsbonus": {
            "type": "integer"
          },
          "count_wheelfortune": {
            "type": "integer"
          },
          "address": {
            "type": "integer"
          },
          "activeOperatorId": {
            "type": "string",
            "nullable": true
          },
          "activeWalletId": {
            "type": "string",
            "nullable": true
          },
          "inviteCode": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "username",
          "email",
          "accessToken",
          "refreshToken",
          "accessTokenExpiresAt",
          "refreshTokenExpiresAt",
          "currentGameSessionDataId",
          "currentAuthSessionDataId",
          "avatarUrl",
          "role",
          "phpId",
          "isActive",
          "lastLoginAt",
          "totalXpGained",
          "vipInfoId",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "lastSeen",
          "rtgBlockTime",
          "phone",
          "path",
          "invitorId",
          "avatar",
          "count_balance",
          "count_tournaments",
          "count_happyhours",
          "count_refunds",
          "count_progress",
          "count_daily_entries",
          "count_invite",
          "count_welcomebonus",
          "count_smsbonus",
          "count_wheelfortune",
          "address",
          "activeOperatorId",
          "activeWalletId",
          "inviteCode"
        ]
      },
      "VipInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "level": {
            "type": "integer"
          },
          "xp": {
            "type": "integer"
          },
          "totalXp": {
            "type": "integer"
          },
          "userId": {
            "type": "string"
          },
          "currentRankid": {
            "type": "integer",
            "nullable": true
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "level",
          "xp",
          "totalXp",
          "userId",
          "currentRankid",
          "createdAt",
          "updatedAt"
        ]
      },
      "VipRank": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "minXp": {
            "type": "integer"
          },
          "icon": {
            "type": "string"
          },
          "dailyCashbackMax": {
            "type": "integer"
          },
          "monthlyCashbackMax": {
            "type": "integer"
          },
          "wagerBonusCoinPct": {
            "type": "integer"
          },
          "purchaseBonusCoinPct": {
            "type": "integer"
          },
          "levelUpBonusCoinPct": {
            "type": "integer"
          },
          "vipSpinMaxAmount": {
            "type": "integer"
          },
          "hasConcierge": {
            "type": "boolean"
          },
          "hasVipLoungeAccess": {
            "type": "boolean"
          },
          "isInvitationOnly": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "minXp",
          "icon",
          "dailyCashbackMax",
          "monthlyCashbackMax",
          "wagerBonusCoinPct",
          "purchaseBonusCoinPct",
          "levelUpBonusCoinPct",
          "vipSpinMaxAmount",
          "hasConcierge",
          "hasVipLoungeAccess",
          "isInvitationOnly"
        ]
      },
      "Wallet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "balance": {
            "type": "integer"
          },
          "paymentMethod": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "cashtag": {
            "type": "string",
            "nullable": true
          },
          "operatorId": {
            "type": "string"
          },
          "lastUsedAt": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "balance",
          "paymentMethod",
          "currency",
          "address",
          "cashtag",
          "operatorId",
          "lastUsedAt",
          "createdAt",
          "updatedAt",
          "userId",
          "isActive"
        ]
      },
      "Game": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string"
          },
          "tags": {
            "type": "string",
            "nullable": true
          },
          "thumbnailUrl": {
            "type": "string",
            "nullable": true
          },
          "bannerUrl": {
            "type": "string",
            "nullable": true
          },
          "developer": {
            "type": "string"
          },
          "providerId": {
            "type": "string",
            "nullable": true
          },
          "totalWagered": {
            "type": "integer",
            "nullable": true
          },
          "totalWon": {
            "type": "integer",
            "nullable": true
          },
          "targetRtp": {
            "type": "integer",
            "nullable": true
          },
          "isFeatured": {
            "type": "boolean",
            "nullable": true
          },
          "statIn": {
            "type": "integer"
          },
          "statOut": {
            "type": "integer"
          },
          "isActive": {
            "type": "boolean"
          },
          "operatorId": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "jpgIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isHorizontal": {
            "type": "boolean"
          },
          "jpgId": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "device": {
            "type": "integer",
            "nullable": true
          },
          "gamebank": {
            "type": "string",
            "nullable": true
          },
          "linesPercentConfigSpin": {
            "type": "string",
            "nullable": true
          },
          "linesPercentConfigSpinBonus": {
            "type": "string",
            "nullable": true
          },
          "linesPercentConfigBonus": {
            "type": "string",
            "nullable": true
          },
          "linesPercentConfigBonusBonus": {
            "type": "string",
            "nullable": true
          },
          "rezerv": {
            "type": "string",
            "nullable": true
          },
          "cask": {
            "type": "string",
            "nullable": true
          },
          "advanced": {
            "type": "string",
            "nullable": true
          },
          "bet": {
            "type": "string",
            "nullable": true
          },
          "scaleMode": {
            "type": "string",
            "nullable": true
          },
          "slotViewState": {
            "type": "string",
            "nullable": true
          },
          "view": {
            "type": "string",
            "nullable": true
          },
          "denomination": {
            "type": "string",
            "nullable": true
          },
          "categoryTemp": {
            "type": "string",
            "nullable": true
          },
          "originalId": {
            "type": "string",
            "nullable": true
          },
          "bids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rtpStatIn": {
            "type": "integer",
            "nullable": true
          },
          "rtpStatOut": {
            "type": "integer",
            "nullable": true
          },
          "currentRtp": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "status": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "name",
          "title",
          "description",
          "category",
          "tags",
          "thumbnailUrl",
          "bannerUrl",
          "developer",
          "providerId",
          "totalWagered",
          "totalWon",
          "targetRtp",
          "isFeatured",
          "statIn",
          "statOut",
          "isActive",
          "operatorId",
          "version",
          "jpgIds",
          "isHorizontal",
          "jpgId",
          "label",
          "device",
          "gamebank",
          "linesPercentConfigSpin",
          "linesPercentConfigSpinBonus",
          "linesPercentConfigBonus",
          "linesPercentConfigBonusBonus",
          "rezerv",
          "cask",
          "advanced",
          "bet",
          "scaleMode",
          "slotViewState",
          "view",
          "denomination",
          "categoryTemp",
          "originalId",
          "bids",
          "rtpStatIn",
          "rtpStatOut",
          "currentRtp",
          "createdAt",
          "updatedAt",
          "status"
        ]
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User ID",
            "example": "user_123"
          },
          "username": {
            "type": "string",
            "description": "Username",
            "example": "john_doe"
          },
          "email": {
            "type": "string",
            "nullable": true,
            "format": "email",
            "description": "Email address",
            "example": "john.doe@example.com"
          },
          "avatarUrl": {
            "type": "string",
            "nullable": true,
            "description": "Avatar URL",
            "example": "https://example.com/avatar.jpg"
          },
          "role": {
            "type": "string",
            "description": "User role",
            "example": "USER"
          },
          "isActive": {
            "type": "boolean",
            "description": "Active status",
            "example": true
          },
          "totalXpGained": {
            "type": "number",
            "description": "Total XP gained",
            "example": 1500
          },
          "vipInfoId": {
            "type": "string",
            "nullable": true,
            "description": "VIP info ID",
            "example": "vip_123"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation timestamp",
            "example": "2023-10-01T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Last update timestamp",
            "example": "2023-10-01T12:00:00Z"
          }
        },
        "required": [
          "id",
          "username",
          "email",
          "avatarUrl",
          "role",
          "isActive",
          "totalXpGained",
          "vipInfoId",
          "createdAt",
          "updatedAt"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message.",
            "example": "Invalid request parameters"
          },
          "code": {
            "type": "string",
            "description": "Error code for programmatic handling.",
            "example": "VALIDATION_ERROR"
          }
        },
        "required": [
          "error"
        ]
      },
      "UsersResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "User ID",
              "example": "user_123"
            },
            "username": {
              "type": "string",
              "description": "Username",
              "example": "john_doe"
            },
            "email": {
              "type": "string",
              "nullable": true,
              "format": "email",
              "description": "Email address",
              "example": "john.doe@example.com"
            },
            "role": {
              "type": "string",
              "description": "User role",
              "example": "USER"
            },
            "status": {
              "type": "string",
              "description": "User status",
              "example": "ACTIVE"
            },
            "isActive": {
              "type": "boolean",
              "description": "Active status",
              "example": true
            },
            "totalXpGained": {
              "type": "number",
              "description": "Total XP gained",
              "example": 1500
            },
            "createdAt": {
              "type": "string",
              "description": "Registration date",
              "example": "2023-10-01T12:00:00Z"
            }
          },
          "required": [
            "id",
            "username",
            "email",
            "role",
            "status",
            "isActive",
            "totalXpGained",
            "createdAt"
          ]
        }
      },
      "GetUsersRequest": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "description": "Maximum number of users to return.",
            "example": 20
          },
          "offset": {
            "type": "number",
            "description": "Number of users to skip.",
            "example": 0
          },
          "status": {
            "type": "string",
            "description": "Filter by user status.",
            "example": "ACTIVE"
          },
          "role": {
            "type": "string",
            "description": "Filter by user role.",
            "example": "USER"
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 3,
            "maxLength": 20,
            "description": "New username.",
            "example": "new_username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "New email address.",
            "example": "new.email@example.com"
          },
          "avatarUrl": {
            "type": "string",
            "format": "uri",
            "description": "New avatar URL.",
            "example": "https://example.com/new-avatar.jpg"
          },
          "role": {
            "type": "string",
            "description": "New user role.",
            "example": "ADMIN"
          }
        }
      },
      "BlockUserRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "ID of the user to block/unblock.",
            "example": "user_123"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "BANNED"
            ],
            "description": "New status for the user.",
            "example": "BANNED"
          }
        },
        "required": [
          "userId",
          "status"
        ]
      },
      "UpdateUserStatusRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "ID of the user to update.",
            "example": "user_123"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "BANNED"
            ],
            "description": "New status for the user.",
            "example": "ACTIVE"
          }
        },
        "required": [
          "userId",
          "status"
        ]
      },
      "UpdatePasswordResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "description": "Update success status",
            "example": true
          }
        },
        "required": [
          "status"
        ]
      },
      "UpdatePasswordRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "minLength": 8,
            "description": "New password for the user.",
            "example": "newSecurePassword123"
          }
        },
        "required": [
          "password"
        ]
      },
      "GamesResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Game"
                },
                {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Game ID",
                      "example": "game_123"
                    },
                    "name": {
                      "type": "string",
                      "description": "Game name",
                      "example": "Slot Machine Deluxe"
                    },
                    "title": {
                      "type": "string",
                      "nullable": true,
                      "description": "Game title",
                      "example": "Deluxe Slots"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true,
                      "description": "Game description",
                      "example": "An exciting slot game"
                    },
                    "category": {
                      "type": "string",
                      "description": "Game category",
                      "example": "slots"
                    },
                    "tags": {
                      "type": "string",
                      "nullable": true,
                      "description": "Game tags",
                      "example": "popular,new"
                    },
                    "thumbnailUrl": {
                      "type": "string",
                      "nullable": true,
                      "description": "Thumbnail image URL",
                      "example": "https://example.com/thumb.jpg"
                    },
                    "bannerUrl": {
                      "type": "string",
                      "nullable": true,
                      "description": "Banner image URL",
                      "example": "https://example.com/banner.jpg"
                    },
                    "developer": {
                      "type": "string",
                      "description": "Game developer",
                      "example": "GameProvider Inc"
                    },
                    "providerId": {
                      "type": "string",
                      "nullable": true,
                      "description": "Provider ID",
                      "example": "provider_123"
                    },
                    "targetRtp": {
                      "type": "number",
                      "nullable": true,
                      "description": "Target RTP percentage",
                      "example": 96.5
                    },
                    "isFeatured": {
                      "type": "boolean",
                      "description": "Whether game is featured",
                      "example": true
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Whether game is active",
                      "example": true
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Creation timestamp",
                      "example": "2023-10-01T12:00:00Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Last update timestamp",
                      "example": "2023-10-01T12:00:00Z"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "title",
                    "description",
                    "category",
                    "tags",
                    "thumbnailUrl",
                    "bannerUrl",
                    "developer",
                    "providerId",
                    "targetRtp",
                    "isFeatured",
                    "isActive",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              ]
            },
            "description": "List of games."
          },
          "total": {
            "type": "number",
            "description": "Total number of games.",
            "example": 150
          },
          "currentPage": {
            "type": "number",
            "description": "Current page number.",
            "example": 1
          },
          "totalPages": {
            "type": "number",
            "description": "Total number of pages.",
            "example": 8
          }
        },
        "required": [
          "data",
          "total",
          "currentPage",
          "totalPages"
        ]
      }
    },
    "parameters": {}
  },
  "paths": {
    "/api/:userId": {
      "get": {
        "operationId": "getUser",
        "tags": [
          "User"
        ],
        "summary": "Get User by ID",
        "description": "Retrieves detailed information about a specific user by their unique ID.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The unique identifier of the user.",
              "example": "user_123"
            },
            "required": true,
            "description": "The unique identifier of the user.",
            "name": "userId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Failed to retrieve user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateUser",
        "tags": [
          "User"
        ],
        "summary": "Update User",
        "description": "Updates an existing user's information including username, email, avatar, or role.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The unique identifier of the user to update.",
              "example": "user_123"
            },
            "required": true,
            "description": "The unique identifier of the user to update.",
            "name": "userId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - User not found or username already taken.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Failed to update user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/list": {
      "post": {
        "operationId": "getUsers",
        "tags": [
          "User"
        ],
        "summary": "Get Users List",
        "description": "Retrieves a paginated list of users with optional filtering by status and role.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUsersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Users retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid filter parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Failed to retrieve users.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/block": {
      "patch": {
        "operationId": "blockUser",
        "tags": [
          "User"
        ],
        "summary": "Block/Unblock User",
        "description": "Changes a user's status to block or unblock them from accessing the system.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User status updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid user ID or status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Failed to update user status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/status": {
      "patch": {
        "operationId": "updateUserStatus",
        "tags": [
          "User"
        ],
        "summary": "Update User Status",
        "description": "Updates a user's status (active, inactive, banned) in the system.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User status updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid user ID or status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Failed to update user status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/:userId/password": {
      "patch": {
        "operationId": "updateUserPassword",
        "tags": [
          "User"
        ],
        "summary": "Update User Password",
        "description": "Updates the password for a specific user. Logs the password change with IP and user agent information.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The unique identifier of the user.",
              "example": "user_123"
            },
            "required": true,
            "description": "The unique identifier of the user.",
            "name": "userId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePasswordResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Failed to update password.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin-login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Admin Login",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout",
        "responses": {
          "200": {
            "description": "Retrieve the user",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/User"
                    },
                    {
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "User ID",
                          "example": "user_123"
                        },
                        "name": {
                          "type": "string",
                          "description": "Username",
                          "example": "john_doe"
                        },
                        "email": {
                          "type": "string",
                          "nullable": true,
                          "format": "email",
                          "description": "Email address",
                          "example": "john.doe@example.com"
                        },
                        "avatarUrl": {
                          "type": "string",
                          "nullable": true,
                          "description": "Avatar URL",
                          "example": "https://example.com/avatar.jpg"
                        },
                        "role": {
                          "type": "string",
                          "description": "User role",
                          "example": "USER"
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "Creation timestamp",
                          "example": "2023-10-01T12:00:00Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "description": "Last update timestamp",
                          "example": "2023-10-01T12:00:00Z"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "email",
                        "avatarUrl",
                        "role",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/me": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get Current User",
        "responses": {
          "200": {
            "description": "Retrieve the user",
            "content": {
              "application/json": {
                "schema": {
                  "user": {
                    "~standard": {
                      "vendor": "zod",
                      "version": 1
                    },
                    "def": {
                      "type": "object",
                      "shape": {
                        "id": {
                          "~standard": {
                            "vendor": "zod",
                            "version": 1
                          },
                          "def": {
                            "type": "string"
                          },
                          "type": "string",
                          "format": null,
                          "minLength": null,
                          "maxLength": null
                        },
                        "name": {
                          "~standard": {
                            "vendor": "zod",
                            "version": 1
                          },
                          "def": {
                            "type": "string"
                          },
                          "type": "string",
                          "format": null,
                          "minLength": null,
                          "maxLength": null
                        },
                        "email": {
                          "~standard": {
                            "vendor": "zod",
                            "version": 1
                          },
                          "def": {
                            "type": "nullable",
                            "innerType": {
                              "~standard": {
                                "vendor": "zod",
                                "version": 1
                              },
                              "def": {
                                "type": "string",
                                "checks": [
                                  {
                                    "~standard": {
                                      "vendor": "zod",
                                      "version": 1
                                    },
                                    "def": {
                                      "type": "string",
                                      "format": "email",
                                      "check": "string_format",
                                      "abort": false,
                                      "pattern": {}
                                    },
                                    "type": "string",
                                    "format": "email",
                                    "minLength": null,
                                    "maxLength": null
                                  }
                                ]
                              },
                              "type": "string",
                              "format": "email",
                              "minLength": null,
                              "maxLength": null
                            }
                          },
                          "type": "nullable"
                        },
                        "avatarUrl": {
                          "~standard": {
                            "vendor": "zod",
                            "version": 1
                          },
                          "def": {
                            "type": "nullable",
                            "innerType": {
                              "~standard": {
                                "vendor": "zod",
                                "version": 1
                              },
                              "def": {
                                "type": "string"
                              },
                              "type": "string",
                              "format": null,
                              "minLength": null,
                              "maxLength": null
                            }
                          },
                          "type": "nullable"
                        },
                        "role": {
                          "~standard": {
                            "vendor": "zod",
                            "version": 1
                          },
                          "def": {
                            "type": "string"
                          },
                          "type": "string",
                          "format": null,
                          "minLength": null,
                          "maxLength": null
                        },
                        "createdAt": {
                          "~standard": {
                            "vendor": "zod",
                            "version": 1
                          },
                          "def": {
                            "type": "string"
                          },
                          "type": "string",
                          "format": null,
                          "minLength": null,
                          "maxLength": null
                        },
                        "updatedAt": {
                          "~standard": {
                            "vendor": "zod",
                            "version": 1
                          },
                          "def": {
                            "type": "string"
                          },
                          "type": "string",
                          "format": null,
                          "minLength": null,
                          "maxLength": null
                        }
                      }
                    },
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/games/all": {
      "get": {
        "tags": [
          "Games"
        ],
        "responses": {
          "200": {
            "description": "List of all games",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GamesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "example": {
                    "message": "Bad Request"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/statistic/dashboard/{type}": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get various dashboard data",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": [
                "daily",
                "transaction",
                "general",
                "token",
                "user",
                "game"
              ]
            },
            "required": true,
            "name": "type",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "startDate",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "endDate",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "sortKey",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "required": false,
            "name": "sortDirection",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "activePlayer": {
                              "type": "number",
                              "description": "Number of active players today.",
                              "example": 150
                            },
                            "newPlayer": {
                              "type": "number",
                              "description": "Number of new players today.",
                              "example": 25
                            },
                            "turnOver": {
                              "type": "number",
                              "description": "Total turnover for the day.",
                              "example": 12500.5
                            },
                            "ggr": {
                              "type": "number",
                              "description": "Gross Gaming Revenue for the day.",
                              "example": 1250.75
                            }
                          },
                          "required": [
                            "activePlayer",
                            "newPlayer",
                            "turnOver",
                            "ggr"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "deposit": {
                              "type": "number",
                              "description": "Total deposits.",
                              "example": 5000
                            },
                            "withdraw": {
                              "type": "number",
                              "description": "Total withdrawals.",
                              "example": 2000
                            },
                            "cashback": {
                              "type": "number",
                              "description": "Total cashback awarded.",
                              "example": 500
                            },
                            "reward": {
                              "type": "number",
                              "description": "Total affiliate rewards.",
                              "example": 1000
                            }
                          },
                          "required": [
                            "deposit",
                            "withdraw",
                            "cashback",
                            "reward"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "time": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Time labels for the graph.",
                              "example": [
                                "2023-10-01",
                                "2023-10-02"
                              ]
                            },
                            "turnOver": {
                              "type": "array",
                              "items": {
                                "type": "number"
                              },
                              "description": "Turnover data points.",
                              "example": [
                                1000,
                                1200
                              ]
                            },
                            "ggr": {
                              "type": "array",
                              "items": {
                                "type": "number"
                              },
                              "description": "GGR data points.",
                              "example": [
                                100,
                                120
                              ]
                            },
                            "activePlayer": {
                              "type": "array",
                              "items": {
                                "type": "number"
                              },
                              "description": "Active player data points.",
                              "example": [
                                50,
                                55
                              ]
                            },
                            "newPlayer": {
                              "type": "array",
                              "items": {
                                "type": "number"
                              },
                              "description": "New player data points.",
                              "example": [
                                5,
                                7
                              ]
                            }
                          },
                          "required": [
                            "time",
                            "turnOver",
                            "ggr",
                            "activePlayer",
                            "newPlayer"
                          ]
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "symbol": {
                                "type": "string"
                              },
                              "deposit": {
                                "type": "number"
                              },
                              "withdraw": {
                                "type": "number"
                              },
                              "balance": {
                                "type": "number"
                              },
                              "turnover": {
                                "type": "number"
                              },
                              "ggr": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "symbol",
                              "deposit",
                              "withdraw",
                              "balance",
                              "turnover",
                              "ggr"
                            ]
                          }
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "username": {
                                "type": "string"
                              },
                              "winRate": {
                                "type": "string"
                              },
                              "turnover": {
                                "type": "number"
                              },
                              "ggr": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "username",
                              "winRate",
                              "turnover",
                              "ggr"
                            ]
                          }
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "winRate": {
                                "type": "string"
                              },
                              "turnover": {
                                "type": "number"
                              },
                              "ggr": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "name",
                              "winRate",
                              "turnover",
                              "ggr"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}